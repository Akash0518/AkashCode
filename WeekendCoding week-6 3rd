import java.util.*;
class GFG{
public static boolean check(int arr[], int n)
{

    int count = 0;
 
    // Store the index of the element
    // that needs to be removed
    int index = -1;
 
    // Traverse the range [1, N - 1]
    for(int i = 1; i < n; i++) 
    {
         
        // If arr[i-1] is greater than
        // or equal to arr[i]
        if (arr[i - 1] >= arr[i])
        {
             
            // Increment the count by 1
            count++;
 
            // Update index
            index = i;
        }
    }
 
    // If count is greater than one
    if (count > 1)
        return false;
 
    // If no element is removed
    if (count == 0)
        return true;
 
    // If only the last or the
    // first element is removed
    if (index == n - 1 || index == 1)
        return true;
 
    // If a[index] is removed
    if (arr[index - 1] < arr[index + 1])
        return true;
 
    // If a[index - 1] is removed
    if (index - 2 >= 0 && arr[index - 2] < arr[index])
        return true;
       
      // if there is no element to compare
      if(index < 0)
          return true;
 
    return false;
}
 
// Driver Code
public static void main(String args[])
{
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int []arr = new int[n];
    for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
    }
    int N = arr.length;
     
    if (check(arr, N))
        System.out.println("true");
    else
        System.out.println("false");
}
}
